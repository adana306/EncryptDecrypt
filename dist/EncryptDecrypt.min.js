/**
 * 
 * @source: https://github.com/wwwouaiebe/EncryptDecrypt
 * 
 * @licstart  The following is the entire license notice for the
 * JavaScript code in this page.
 * 
 * encryptdecript - version 2.0.0-dev
 * Build 00561 - 2023-03-01T22:18:31+0100 
 * Copyright 2019 2023 wwwouaiebe 
 * Contact: https://www.ouaie.be/
 * License: GPL-3.0
 * 
 * The JavaScript code in this page is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 * 
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 * 
 * @licend  The above is the entire license notice
 * for the JavaScript code in this page.
 * 
 */


!function(){"use strict";const e=new class{#e;#t(e){return window.crypto.subtle.importKey("raw",e,{name:"PBKDF2"},!1,["deriveKey"])}#n(e,t){return window.crypto.subtle.deriveKey({name:"PBKDF2",salt:(new window.TextEncoder).encode(t),iterations:1e6,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}#r(e,t){return window.crypto.subtle.decrypt({name:"AES-GCM",iv:new Uint8Array(t.slice(0,16))},e,new Uint8Array(t.slice(16)))}#i(e,t,n){return window.crypto.subtle.encrypt({name:"AES-GCM",iv:t},e,n)}constructor(e){this.#e=e||"Tire la chevillette la bobinette cherra. Le Petit Chaperon rouge tira la chevillette.",Object.freeze(this)}encryptData(e,t,n,r){let i=window.crypto.getRandomValues(new Uint8Array(16));r.then((e=>this.#t(e))).then((e=>this.#n(e,this.#e))).then((t=>this.#i(t,i,e))).then((e=>{t(new Blob([i,new Uint8Array(e)],{type:"application/octet-stream"}))})).catch(n)}decryptData(e,t,n,r){r.then((e=>this.#t(e))).then((e=>this.#n(e,this.#e))).then((t=>this.#r(t,e))).then(t).catch(n)}};class t{#o;#c;#l;#s;#a;#d;#p;static get#m(){return 12}#h(){document.body.removeChild(this.#o)}#u(e,t,n){this.#d=t,this.#p=n,this.#a.innerText="Decrypt"===e?"Type the password used for encryption":"The password must be at least 12 characters long and contain at least \t\t\tone capital, one lowercase, one number, and one other character.",document.body.appendChild(this.#o),this.#s.value="",this.#s.focus()}constructor(){Object.freeze(this),this.#o=document.createElement("div"),this.#o.id="pswMainDiv";const e=document.createElement("div");e.id="pswDiv",this.#o.appendChild(e);const t=document.createElement("label");t.htmlFor="pswInput",t.appendChild(document.createTextNode("Password : ")),e.appendChild(t),this.#s=document.createElement("input"),this.#s.type="password",this.#s.id="pswInput",e.appendChild(this.#s);const n=document.createElement("div");n.id="buttonsDiv",this.#o.appendChild(n),this.#c=document.createElement("input"),this.#c.type="button",this.#c.value="Ok",this.#c.id="okButton",this.#c.addEventListener("click",(()=>this.onOkButtonClick())),n.appendChild(this.#c),this.#l=document.createElement("input"),this.#l.type="button",this.#l.value="Cancel",this.#l.id="cancelButton",this.#l.addEventListener("click",(()=>this.onCancelButtonClick())),n.appendChild(this.#l),this.#a=document.createElement("div"),this.#a.id="errorPswDiv"}onCancelButtonClick(){this.#h(),this.#p(new Error("Canceled by user"))}onOkButtonClick(){let e=this.#s.value;if(t.#m>e.length||!e.match(RegExp("[0-9]+"))||!e.match(RegExp("[a-z]+"))||!e.match(RegExp("[A-Z]+"))||!e.match(RegExp("[^0-9a-zA-Z]")))return this.#s.focus(),void this.#a.classList.add("red");this.#h(),this.#d((new window.TextEncoder).encode(e))}getPromise(e){return new Promise(((t,n)=>this.#u(e,t,n)))}}const n=new t;const r=new class{#E(e){let t=null;try{t=JSON.parse((new TextDecoder).decode(e))}catch(e){return void this.#y(e)}let n=[];for(let e in t.data)n.push(t.data[e]);let r=new Blob([new Uint8Array(n)],{type:t.type}),i=URL.createObjectURL(r),o=document.createElement("a");o.setAttribute("href",i),-1===["application/pdf","text/html","image/jpeg","image/png"].indexOf(t.type)&&o.setAttribute("download",t.name),o.click(),window.URL.revokeObjectURL(i)}#w(e){let t=URL.createObjectURL(e),n=document.createElement("a");n.setAttribute("href",t),n.setAttribute("download","Data"),n.click(),window.URL.revokeObjectURL(t)}#y(e){}constructor(){Object.freeze(this)}decryptURL(t){fetch(t,{mode:"no-cors"}).then((e=>{if(e.ok)return e.arrayBuffer()})).then((t=>{e.decryptData(t,(e=>this.#E(e)),(e=>this.#y(e)),n.getPromise("Decrypt"))})).catch()}encryptFile(t){let r=new FileReader;r.onload=()=>{e.encryptData((new window.TextEncoder).encode(JSON.stringify({data:new Uint8Array(r.result),name:t.name,type:t.type})),(e=>this.#w(e)),(e=>this.#y(e)),n.getPromise("Encrypt"))},r.readAsArrayBuffer(t)}decryptFile(t){let r=new FileReader;r.onload=()=>{e.decryptData(r.result,(e=>this.#E(e)),(e=>this.#y(e)),n.getPromise("Decrypt"))},r.readAsArrayBuffer(t)}};const i=new class{#o;#L;#h(){document.body.removeChild(this.#o)}#H(e){this.#h(),r.encryptFile(e.target.files[0])}#T(e){this.#h(),r.decryptFile(e.target.files[0])}#C(){this.#h(),r.decryptURL(this.#L.value)}#M(){const e=document.createElement("h3");e.innerText="Encrypt",this.#o.appendChild(e);const t=document.createElement("div");this.#o.appendChild(t);const n=document.createElement("input");n.type="file",n.id="encryptButton",n.addEventListener("change",(e=>this.#H(e))),t.appendChild(n)}#v(){const e=document.createElement("h3");e.innerText="Decrypt",this.#o.appendChild(e);const t=document.createElement("div");this.#o.appendChild(t);const n=document.createElement("input");n.type="file",n.id="decryptButton",n.addEventListener("change",(e=>this.#T(e))),t.appendChild(n),this.#L=document.createElement("input"),this.#L.type="url",this.#L.id="urlDecrypt",this.#L.size="128",this.#L.placeholder="https://",t.appendChild(this.#L);let r=document.createElement("input");r.type="button",r.value="Go",r.id="goButton",r.addEventListener("click",(()=>this.#C())),t.appendChild(r)}constructor(){Object.freeze(this),this.#o=document.createElement("div"),this.#o.id="encryptDecrypt",this.#M(),this.#v()}show(){window.document.body.appendChild(this.#o)}};document.addEventListener("keydown",(function(e){"urlDecrypt"===e.target.id&&"Enter"===e.key&&r.decryptURL(e.target.value),"pswInput"===e.target.id&&("Escape"===e.key||"Esc"===e.key?n.onCancelButtonClick():"Enter"===e.key&&n.onOkButtonClick())}),!0);(new class{#b(){return window.isSecureContext?window.crypto&&window.crypto.subtle&&window.crypto.subtle.importKey?window.crypto.subtle.importKey("raw",(new window.TextEncoder).encode("hoho"),{name:"PBKDF2"},!1,["deriveKey"]):Promise.reject(new Error("Cryptographic functions are not installed")):Promise.reject(new Error("You don't use a secure context (https)"))}#k(){const e=new URL(window.location);let t=e.searchParams.get("fil");if(t&&0!==t.length)try{if(t=atob(t),t.match(/[^\w-%:./]/))return Promise.reject(new Error("invalid char in the url encoded in the fil parameter"));const n=new URL(t,e.protocol+"//"+e.hostname);return"file:"===e.protocol&&"file:"===n.protocol||e.protocol&&n.protocol&&e.protocol===n.protocol&&e.hostname&&n.hostname&&e.hostname===n.hostname?Promise.resolve(encodeURI(n.href)):Promise.reject(new Error("The distant file is not on the same site than the app"))}catch(e){return Promise.reject(e)}return Promise.resolve()}startApp(){this.#b().then((()=>this.#k())).then((e=>{e?r.decryptURL(e):i.show()})).catch((e=>{console.error(e);const t=document.createElement("div");t.id="errorDiv",t.innerText=e.message,document.body.appendChild(t)}))}constructor(){Object.freeze(this)}}).startApp()}();